/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: vatsalpanghal (https://sketchfab.com/vatsalpanghal)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/whey-protien-powder-3d-model-432f9c3fbd2544edbce7019125a901ef
Title: Whey Protien Powder 3D Model
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'
import { useFrame } from '@react-three/fiber'


type GLTFResult = GLTF & {
    nodes: {
        Object_4: THREE.Mesh
        Object_5: THREE.Mesh
    }
    materials: {
        Label: THREE.MeshPhysicalMaterial
        Black_Plastic: THREE.MeshPhysicalMaterial
    }
}

function Model(props: JSX.IntrinsicElements['group']) {



    const myMesh = useRef(null!)
    const { nodes, materials } = useGLTF('/models/whey_protien_powder_3d_model.glb') as GLTFResult
    const modelScale = Math.max(window.innerWidth / 1300, 1)
    // useFrame(({ clock }) => {
    //     // @ts-ignore
    //     myMesh.current.rotation.x = Math.sin(clock.getElapsedTime())
    // })

   

    return (
        <group ref={myMesh} {...props} dispose={null} >
            <group ref={myMesh} position={[-27.59158, -0.15272, -5.76733]} scale={modelScale}>
                <mesh

                    castShadow
                    receiveShadow
                    geometry={nodes.Object_4.geometry}
                    material={materials.Label}
                />
                <mesh
                    castShadow
                    receiveShadow
                    geometry={nodes.Object_5.geometry}
                    material={materials.Black_Plastic}

                />
            </group>
        </group>
    )
}

useGLTF.preload('/models/whey_protien_powder_3d_model.glb')
export default Model
